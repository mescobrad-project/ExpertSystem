"""Change Schema to expert_system

Revision ID: 29077ddb7045
Revises: 45b8c2f9de40
Create Date: 2022-11-11 17:51:44.164054

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from src.models._base import GUID

# revision identifiers, used by Alembic.
revision = "29077ddb7045"
down_revision = "45b8c2f9de40"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "module_categories",
        sa.Column("id", GUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_module_categories_code"),
        "module_categories",
        ["code"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_module_categories_name"),
        "module_categories",
        ["name"],
        unique=False,
        schema="expert_system",
    )
    op.create_table(
        "workflow_categories",
        sa.Column("id", GUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_workflow_categories_code"),
        "workflow_categories",
        ["code"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_workflow_categories_name"),
        "workflow_categories",
        ["name"],
        unique=False,
        schema="expert_system",
    )
    op.create_table(
        "modules",
        sa.Column("id", GUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("category_id", GUID(), nullable=True),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("task", sa.String(), nullable=False),
        sa.Column("instructions", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["expert_system.module_categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_modules_category_id"),
        "modules",
        ["category_id"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_modules_code"),
        "modules",
        ["code"],
        unique=True,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_modules_name"),
        "modules",
        ["name"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_modules_task"),
        "modules",
        ["task"],
        unique=False,
        schema="expert_system",
    )
    op.create_table(
        "workflows",
        sa.Column("id", GUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("category_id", GUID(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tasks", sa.JSON(), nullable=True),
        sa.Column("stores", sa.JSON(), nullable=True),
        sa.Column("raw_diagram_data", sa.JSON(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["expert_system.workflow_categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_workflows_category_id"),
        "workflows",
        ["category_id"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_workflows_is_template"),
        "workflows",
        ["is_template"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_workflows_name"),
        "workflows",
        ["name"],
        unique=True,
        schema="expert_system",
    )
    op.create_table(
        "runs",
        sa.Column("id", GUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("workflow_id", GUID(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("state", sa.JSON(), nullable=True),
        sa.Column("steps", sa.JSON(), nullable=True),
        sa.Column("queue", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["expert_system.workflows.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_runs_name"),
        "runs",
        ["name"],
        unique=False,
        schema="expert_system",
    )
    op.create_index(
        op.f("ix_expert_system_runs_workflow_id"),
        "runs",
        ["workflow_id"],
        unique=False,
        schema="expert_system",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_expert_system_runs_workflow_id"),
        table_name="runs",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_runs_name"), table_name="runs", schema="expert_system"
    )
    op.drop_table("runs", schema="expert_system")
    op.drop_index(
        op.f("ix_expert_system_workflows_name"),
        table_name="workflows",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_workflows_is_template"),
        table_name="workflows",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_workflows_category_id"),
        table_name="workflows",
        schema="expert_system",
    )
    op.drop_table("workflows", schema="expert_system")
    op.drop_index(
        op.f("ix_expert_system_modules_task"),
        table_name="modules",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_modules_name"),
        table_name="modules",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_modules_code"),
        table_name="modules",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_modules_category_id"),
        table_name="modules",
        schema="expert_system",
    )
    op.drop_table("modules", schema="expert_system")
    op.drop_index(
        op.f("ix_expert_system_workflow_categories_name"),
        table_name="workflow_categories",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_workflow_categories_code"),
        table_name="workflow_categories",
        schema="expert_system",
    )
    op.drop_table("workflow_categories", schema="expert_system")
    op.drop_index(
        op.f("ix_expert_system_module_categories_name"),
        table_name="module_categories",
        schema="expert_system",
    )
    op.drop_index(
        op.f("ix_expert_system_module_categories_code"),
        table_name="module_categories",
        schema="expert_system",
    )
    op.drop_table("module_categories", schema="expert_system")
    # ### end Alembic commands ###
